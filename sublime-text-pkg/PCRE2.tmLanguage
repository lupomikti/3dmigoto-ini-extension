<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>PCRE2</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#base</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#base-extended</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>anchor</key>
		<dict>
			<key>match</key>
			<string>\\[GAZzBb]|[\^$]</string>
			<key>name</key>
			<string>keyword.control.anchor.regexp</string>
		</dict>
		<key>backref</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\([1-9](?:\d|\d{3,})?)</string>
					<key>name</key>
					<string>keyword.other.backref.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\(?:g(?:\d+|\{-?\d+\}|[&lt;']\+?\d+['&gt;]|[{&lt;']\w+['&gt;}])|k[{&lt;']\w+['&gt;}])</string>
					<key>name</key>
					<string>keyword.other.backref.regexp</string>
				</dict>
			</array>
		</dict>
		<key>base</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#group-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#group-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#group</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base-common</string>
				</dict>
			</array>
		</dict>
		<key>base-common</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#character-class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#anchor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#backref</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#switch</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#char-escape</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
			</array>
		</dict>
		<key>base-extended</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#group-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#group-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#group-extended</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base-common</string>
				</dict>
			</array>
		</dict>
		<key>base-extended-nested</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#group-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#group-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#group-extended</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#extended-patterns</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#base-common</string>
				</dict>
			</array>
		</dict>
		<key>char-escape</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.character-class.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.numeric.regexp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:(\\[wWsSdDhHvVXRCN])|(\\[0-7]{3}))</string>
					<key>name</key>
					<string>meta.structure.meta-sequence.regexp</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.unicode-property.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.numeric.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.control.regexp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:(\\[pP](?:\{\w+\}|[CLMNPSZ]))|(\\x\{[0-9a-fA-F]{4}\}|\\x[0-9a-fA-F]{2})|(\\c[A-Z]))</string>
					<key>name</key>
					<string>meta.structure.prefixed-meta-sequence.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[ntr0]</string>
					<key>name</key>
					<string>meta.structure.common-escapes.regexp constant.character.escape.common.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.backslash.regexp</string>
				</dict>
			</array>
		</dict>
		<key>character-class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\[)(\^)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.negation.regexp</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;!:)(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.end.regexp</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#posix-class</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\[\\\^\-\[\]b]</string>
							<key>name</key>
							<string>constant.character.escape.character-set.regexp</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!\\)-</string>
							<key>name</key>
							<string>punctuation.separator.sequence.regexp</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#char-escape</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>extended-patterns</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\#+</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.regexp</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>comment.line.number-sign.regexp</string>
					<key>end</key>
					<string>\n</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\\)\s+</string>
					<key>name</key>
					<string>meta.ignored-whitespace.regexp</string>
				</dict>
			</array>
		</dict>
		<key>group</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#group-special</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(\?([imsUJn]+|[imsUJn]*(-)[imsUJn]+):)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.mode.regexp</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.mode.basic.regexp</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.local-modifiers.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(?:(\?&lt;?[=!])|(\?[:&gt;])|(\?\|)|(\?\(DEFINE\)))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.lookaround.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.non-capturing.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.other.non-incrementing.regexp</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.other.definition.regexp</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.mode.basic.regexp</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.assertion.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(?:(\?(?:'\w+'|P?&lt;\w+&gt;))|(?!\?))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.capture-group.regexp</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.mode.basic.regexp</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.capture-group.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#base</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>group-comment</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.begin.regexp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>comment.block.group.regexp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.end.regexp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\(\?#)(.*)(\))</string>
			<key>name</key>
			<string>meta.group.comment.regexp</string>
		</dict>
		<key>group-extended</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#group-special</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(\?([imsUJn]*xx?[imsUJn]*|[imsUJn]*xx?[imsUJn]*(-)[imsUJn]+))(\))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.modifier-group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.group.modifiers.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.mode.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.unset.regexp</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.modifier-group.end.regexp</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.mode.extended.regexp</string>
					<key>end</key>
					<string>(?:(\()(\?([imsUJn]*(-)[imsUJn]*xx?[imsUJn]*))(\))|\z)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.modifier-group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.group.modifiers.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.mode.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.unset.regexp</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.modifier-group.end.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.modifiers.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#base-extended-nested</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(\?([imsUJn]*xx?[imsUJn]*|[imsUJn]*xx?[imsUJn]*(-)[imsUJn]+):)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.group.modifiers.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.mode.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.unset.regexp</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.mode.extended.regexp</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.local-modifiers.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#base-extended-nested</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(?:(\?&lt;?[=!])|(\?[:&gt;])|(\?\|))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.lookaround.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.non-capturing.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.other.non-incrementing.regexp</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.mode.extended.regexp</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.assertion.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#base-extended-nested</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()(?:(\?(?:'\w+'|P?&lt;\w+&gt;))|(?!\?))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.capture-group.regexp</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.mode.extended.regexp</string>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.capture-group.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#base-extended-nested</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>group-modifiers</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.modifier-group.begin.regexp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.group.modifiers.regexp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.mode.regexp</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>puntuation.separator.unset.regexp</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.modifier-group.end.regexp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\()(\?([imsUJn]+|[imsUJn]*(-)[imsUJn]+))(\))</string>
			<key>name</key>
			<string>meta.group.modifiers.regexp</string>
		</dict>
		<key>group-special</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\(\*(PRUNE|SKIP|THEN|COMMIT|FAIL|ACCEPT|(?:MARK)?:[A-Z0-9_]+)\)</string>
					<key>name</key>
					<string>meta.group.control.regexp keyword.control.verb.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(\*(UTF(?:8|16|32)?|UCP|CR|LF|(?:ANY)?CRLF|ANY|NOTEMPTY(?:_ATSTART)?|NO_JIT|BSR_(?:ANYCRLF|UNICODE)|NO_AUTO_POSSESS|NO_START_OPT)\)</string>
					<key>name</key>
					<string>meta.group.control.regexp keyword.control.modifier.regexp</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.group.backref.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.backref.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.backref.regexp</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.regexp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\()(\?(?:([+-]?\d+)|P=(\w+)))(\))</string>
					<key>name</key>
					<string>meta.group.back-reference.regexp</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.begin.regexp</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.group.recursion.regexp</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.capture-group.regexp</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.group.end.regexp</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\()(\?(?:R|(?:&amp;|P&gt;)(\w+)))(\))</string>
					<key>name</key>
					<string>meta.group.recursion.regexp</string>
				</dict>
			</array>
		</dict>
		<key>operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>keyword.operator.or.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>keyword.operator.any.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:[?*+]|\{\d+(?:,\d*)?\})[?+]?</string>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp</string>
				</dict>
			</array>
		</dict>
		<key>posix-class</key>
		<dict>
			<key>match</key>
			<string>\[:(?:ascii|alnum|alpha|blank|cntrl|digit|graph|lower|print|punct|space|upper|word|xdigit|[&gt;&lt;]):\]</string>
			<key>name</key>
			<string>constant.other.posix-class.regexp</string>
		</dict>
		<key>switch</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\K</string>
					<key>name</key>
					<string>keyword.control.reset.regexp</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\\Q</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.literal.regexp</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.other.regexp</string>
					<key>end</key>
					<string>\\E</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.literal.regexp</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.string-literal.regexp</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.regexp.pcre2</string>
</dict>
</plist>
